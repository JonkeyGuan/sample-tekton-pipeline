apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: ci-pipeline
spec:
  params:
    - description: git url to clone
      name: git-source-url
      type: string
    - default: main
      description: 'git revision to checkout (branch, tag, sha, refâ€¦)'
      name: git-source-revision
      type: string
    - description: image tag - truncated commit Id
      name: short-commit-id
      type: string
    - default: ''
      description: The Maven repository mirror url
      name: MAVEN_MIRROR_URL
      type: string
    - default: ''
      description: The username for the maven mirror user
      name: MAVEN_MIRROR_USER
      type: string
    - description: The password for the maven mirror password
      name: MAVEN_MIRROR_PASSWORD
      type: string
    - default: 'http://sonarqube-sonarqube.sonarqube.svc.cluster.local:9000'
      description: SonarQube url for static code analysis
      name: SONAR_URL
      type: string
    - default: sqa_a3fa7093e78d1e883f56e00200b16a9461c4e1bf
      description: SonarQube authentication token for static code analysis
      name: SONAR_AUTH_TOKEN
      type: string
    - default: ./
      description: image path
      name: LOCAL_SCAN_PATH
      type: string
    - default: ./storage/
      description: local image path
      name: LOCAL_IMAGE_SCAN_PATH
      type: string
    - default: 'image-registry.openshift-image-registry.svc:5000/cop-dev/my-app-image'
      description: remote image path
      name: REMOTE_IMAGE_URL
      type: string
    - default: UNKNOWN
      description: vulnerability severity level
      name: SEVERITY_LEVELS
      type: string
    - default: 'https://gitlab.apps.ocp1.jonkey.cc/jonkey/sample-kustomize.git'
      description: Kustomize git repo for CD
      name: KUSTOMIZE_GIT_URL
      type: string
    - default: cop-sample-app/overlays/dev
      description: Kustomize git repo context directory for CD
      name: KUSTOMIZE_GIT_CONTEXT_DIR
      type: string
    - default: main
      description: Kustomize git repo branch
      name: KUSTOMIZE_GIT_BRANCH
      type: string
  tasks:
    - name: git-clone
      params:
        - name: url
          value: $(params.git-source-url)
        - name: revision
          value: $(params.git-source-revision)
        - name: sslVerify
          value: 'false'
        - name: noProxy
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: source-code
    - name: run-test-cases
      params:
        - name: GOALS
          value:
            - clean
            - test
        - name: MAVEN_MIRROR_URL
          value: $(params.MAVEN_MIRROR_URL)
        - name: SERVER_USER
          value: $(params.MAVEN_MIRROR_USER)
        - name: SERVER_PASSWORD
          value: $(params.MAVEN_MIRROR_PASSWORD)
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: maven-with-mirror
      workspaces:
        - name: source
          workspace: source-code
        - name: maven-settings
          workspace: maven-settings
    - name: static-code-analysis
      params:
        - name: GOALS
          value:
            - 'sonar:sonar'
            - '-Dsonar.projectKey=ci-pipeline-ref-arc'
            - '-Dsonar.host.url=$(params.SONAR_URL)'
            - '-Dsonar.login=$(params.SONAR_AUTH_TOKEN)'
            - '-Dsonar.exclusions=**/*.java'
            - '-s  $(workspaces.maven-settings.path)/settings.xml'
        - name: MAVEN_MIRROR_URL
          value: $(params.MAVEN_MIRROR_URL)
        - name: SERVER_USER
          value: $(params.MAVEN_MIRROR_USER)
        - name: SERVER_PASSWORD
          value: $(params.MAVEN_MIRROR_PASSWORD)
      runAfter:
        - run-test-cases
      taskRef:
        kind: Task
        name: maven-with-mirror
      workspaces:
        - name: source
          workspace: source-code
        - name: maven-settings
          workspace: maven-settings
    - name: build-artifact
      params:
        - name: GOALS
          value:
            - '-DskipTests'
            - package
            - '-Dquarkus.native.container-build=true'
        - name: MAVEN_MIRROR_URL
          value: $(params.MAVEN_MIRROR_URL)
        - name: SERVER_USER
          value: $(params.MAVEN_MIRROR_USER)
        - name: SERVER_PASSWORD
          value: $(params.MAVEN_MIRROR_PASSWORD)
      runAfter:
        - static-code-analysis
      taskRef:
        kind: Task
        name: maven-with-mirror
      workspaces:
        - name: source
          workspace: source-code
        - name: maven-settings
          workspace: maven-settings
    - name: scan-build-artifact
      params:
        - name: SCAN_TYPE
          value: filesystem
        - name: SEVERITY_LEVELS
          value: $(params.SEVERITY_LEVELS)
        - name: SCAN_PATH_OR_IMAGE_URL
          value: $(params.LOCAL_SCAN_PATH)
      runAfter:
        - build-artifact
      taskRef:
        kind: Task
        name: trivy-scan
      workspaces:
        - name: scan-dir
          workspace: source-code
        - name: trivy-cache
          workspace: trivy-cache
    - name: build-image
      params:
        - name: IMAGE
          value: $(params.REMOTE_IMAGE_URL)
        - name: TLSVERIFY
          value: 'false'
      runAfter:
        - build-artifact
      taskRef:
        kind: Task
        name: buildah-build
      workspaces:
        - name: source
          workspace: source-code
        - name: varlibcontainers
          workspace: image-cache
    - name: scan-local-image
      params:
        - name: SCAN_TYPE
          value: filesystem
        - name: SEVERITY_LEVELS
          value: $(params.SEVERITY_LEVELS)
        - name: SCAN_PATH_OR_IMAGE_URL
          value: $(params.LOCAL_IMAGE_SCAN_PATH)
      runAfter:
        - build-image
      taskRef:
        kind: Task
        name: trivy-scan
      workspaces:
        - name: scan-dir
          workspace: image-cache
        - name: trivy-cache
          workspace: trivy-cache
    - name: push-image
      params:
        - name: IMAGE
          value: $(params.REMOTE_IMAGE_URL)
        - name: IMAGE_TAG
          value: $(params.short-commit-id)
        - name: TLSVERIFY
          value: 'false'
      runAfter:
        - build-image
      taskRef:
        kind: Task
        name: buildah-push
      workspaces:
        - name: source
          workspace: source-code
        - name: varlibcontainers
          workspace: image-cache
    - name: scan-remote-image
      params:
        - name: SCAN_TYPE
          value: image
        - name: SEVERITY_LEVELS
          value: $(params.SEVERITY_LEVELS)
        - name: SCAN_PATH_OR_IMAGE_URL
          value: '$(params.REMOTE_IMAGE_URL):$(params.short-commit-id)'
        - name: IGNORE_UNFIXED
          value: 'true'
      runAfter:
        - push-image
      taskRef:
        kind: Task
        name: trivy-scan
      workspaces:
        - name: scan-dir
          workspace: image-cache
        - name: trivy-cache
          workspace: trivy-cache
    - name: update-kustomize-repo
      params:
        - name: gitRepositoryUrl
          value: $(params.KUSTOMIZE_GIT_URL)
        - name: gitRepositoryRevision
          value: $(params.KUSTOMIZE_GIT_BRANCH)
        - name: gitPath
          value: $(params.KUSTOMIZE_GIT_CONTEXT_DIR)
        - name: imageTag
          value: $(params.short-commit-id)
        - name: verbose
          value: 'true'
        - name: sslVerify
          value: 'false'
      runAfter:
        - scan-remote-image
      taskRef:
        kind: Task
        name: update-kustomize-repo
      workspaces:
        - name: repository
          workspace: kustomize-repo
  workspaces:
    - name: source-code
    - name: maven-settings
    - name: image-cache
    - name: trivy-cache
    - name: kustomize-repo
